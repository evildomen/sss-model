<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" 
	id="WebApp_ID" version="2.5">
	<!-- 1.启动Spring的容器 ，有一个#ContexLoaderListener,但没找到-->
	<!-- 加载Sping的配置文件 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<!-- spring配置文件的位置，可以修改 -->
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 2.springmvc的前端控制器，拦截所有请求，有一个 #dispatcherservlet，还是没找到 -->
	<servlet>
		<servlet-name>springDispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 设置springmvc配置文件的位置 -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<!-- springmvc配置文件的位置，可以修改 -->
			<param-value>class:spring-mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>springDispatcherServlet</servlet-name>
		<url-pattern></url-pattern>
	</servlet-mapping>
	
	<!-- 3.字符编码过滤器，有多个filter，就会有先后顺序，字符编码过滤器一定要放到所有过滤器之前 -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<!-- 指定要用到的编码集 -->
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
		<!-- 设置请求和相应编码，新版本和旧版本不同 -->
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<!-- 拦截所有请求 -->
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 4.使用Rest风格的URI，将页面发过来的普通的post请求变为指定的delete货值put请求 -->
	<filter>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	<filter-mapping>
		 <filter-name>HiddenHttpMethodFilter</filter-name>
		 <url-pattern>/*</url-pattern>
	</filter-mapping>
</web-app>
